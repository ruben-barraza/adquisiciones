<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */



class Im_general extends CI_Controller
{

    function __construct()
    {
        parent::__construct();
        $this->load->model('Imgeneralmodel');
        $this->load->model('Comboboxesmodel');
        $this->load->helper('form');
    }


    /*
     * Listing of listaim_general
     */
    function index()
    {

        $data['listaim_general'] = $this->Imgeneralmodel->get_all_listaim_general();

        $data['familias'] = $this->Comboboxesmodel->getFamilias();
        $data['_view'] = 'im_general/index';
        $this->load->view('layouts/main', $data);


    }

    function obtenerNombreEmpleadoImGeneral()
    {
        $rpe = $_POST['rpe'];
        $data['nombre'] = $this->Imgeneralmodel->get_empleado($rpe);
        echo json_encode($data);
    }

    function obtenerPreciosIMC()
    {
        $prov_id = $_POST['idProveedor'];
        $idPog = $_POST['idPog'];
        $data['preciosimc'] = $this->Imgeneralmodel->get_imc_precios($prov_id, $idPog);
        $data['subtotalimc'] = $this->Imgeneralmodel->get_imc_subtotal($prov_id, $idPog);
        echo json_encode($data);
    }

    function updatePreciosIMC()
    {
        $cantidad = $_POST['cantidad'];
        $importe = $_POST['importe'];
        $idProveedor = $_POST['idProveedor'];
        $idPog = $_POST['idPog'];
        $precioIM = $_POST['precio'];

        $codigo = $_POST['codigo'];
        $idArticulo = $this->Imgeneralmodel->get_idArticulo($codigo);

        $this->Imgeneralmodel->update_imc_precios($cantidad, $precioIM, $importe, $idProveedor, $idArticulo, $idPog);
    }

    function updateIMG()
    {
        $idimg = $_POST['idimg'];
        $titulo = $_POST['titulo'];
        $autorizaRpe = $_POST['empleadoAutorizaRpe'];
        $formulaRpe = $_POST['empleadoFormulaRpe'];
        $solped = $_POST['solped'];
        $estatus = $_POST['imcestatus'];

        $idEmpleadoAutoriza = $this->Imgeneralmodel->get_idEmpleado($autorizaRpe);
        $idEmpleadoFormula = $this->Imgeneralmodel->get_idEmpleado($formulaRpe);

        $params = array(
            'titulo' => $titulo,
            'idEmpleadoFormula' => $idEmpleadoFormula,
            'idEmpleadoAutoriza' => $idEmpleadoAutoriza,
            'estatus' => $estatus,
            'SOLPED' => $solped,
        );

        $this->Imgeneralmodel->update_im_general($idimg, $params);
    }

    /*
     * Adding a new im_general
     */
    function add()
    {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('titulo', 'Titulo', 'max_length[255]|required');
        $this->form_validation->set_rules('idEmpleadoFormula', 'IdEmpleadoFormula', 'max_length[5]');
        $this->form_validation->set_rules('idEmpleadoAutoriza', 'IdEmpleadoAutoriza', 'max_length[5]');
        $this->form_validation->set_rules('fechaElaboracion', 'FechaElaboracion', 'required');
        $this->form_validation->set_rules('idMunicipioElaboracion', 'IdMunicipioElaboracion', 'required');
        $this->form_validation->set_rules('solped', 'solped', 'integer', 'max_length[12]');


        if ($this->form_validation->run()) {
            $params = array(
                'titulo' => $this->input->post('titulo'),
                'idEmpleadoFormula' => $this->input->post('idEmpleadoFormula'),
                'idEmpleadoAutoriza' => $this->input->post('idEmpleadoAutoriza'),
                'fechaElaboracion' => $this->input->post('fechaElaboracion'),
                'idMunicipioElaboracion' => $this->input->post('idMunicipioElaboracion'),
            );

            $im_general_id = $this->Imgeneralmodel->add_im_general($params);
            redirect('im_general/index');
        } else {
            $this->load->model('Comboboxesmodel');
            $data['listaim_concepto'] = $this->Imgeneralmodel->get_all_listaim_concepto();
            $data['familias'] = $this->Comboboxesmodel->getFamilias();
            $data['almacenes'] = $this->Comboboxesmodel->getAlmacenes();
            $data['estados'] = $this->Comboboxesmodel->getEstados();
            $data['peticiones'] = $this->Comboboxesmodel->getPeticiones();
            $data['sumas'] = $this->Imgeneralmodel->suma_imgeneral();


            $data['_view'] = 'im_general/add';
            $this->load->view('layouts/main', $data);

        }
    }

    /*
     * Editing a im_general
     */
    function edit($id)
    {
        // check if the im_general exists before trying to edit it
        $data['im_general'] = $this->Imgeneralmodel->get_im_general($id);
        $pog_id = $this->Imgeneralmodel->get_pog_id($id);

        if (isset($data['im_general']['id'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('titulo', 'Titulo', 'max_length[255]|required');
            $this->form_validation->set_rules('empleadoFormula', 'empleadoFormula', 'required');
            $this->form_validation->set_rules('empleadoAutoriza', 'empleadoAutoriza', 'required');

            if ($this->form_validation->run()) {
                /*
                $params = array(
                    'titulo' => $this->input->post('titulo'),
                    'idEmpleadoFormula' => $this->input->post('empleadoFormula'),
                    'idEmpleadoAutoriza' => $this->input->post('empleadoAutoriza'),
                );

                $this->Imgeneralmodel->update_im_general($id, $params);
                redirect('im_general/index');
                */
            } else {

                $data['empleadoAutoriza'] = $this->Imgeneralmodel->getEmpleadoAutoriza($id);
                $data['empleadoFormula'] = $this->Imgeneralmodel->getEmpleadoFormula($id);
                $data['imcProveedores'] = $this->Imgeneralmodel->get_img_proveedores($pog_id);
                $data['imcConcepto'] = $this->Imgeneralmodel->get_imc_concepto($pog_id);

                $arr = $this->Imgeneralmodel->get_pmc_data($id);
                $data['arr'] = $arr;

                $output = array();

                foreach($arr as $item){
                    if(in_array($item['partida'], array_column($output, 'partida'))){
                        // add store to already existing item
                        $key = array_search($item['partida'], array_column($arr, 'partida'));
                        $output[$key]['idProveedor_' . $item['idProveedor']] = floatval($item['importeIM']);
                    }else{
                        // add new item with store
                        $tmp = array(
                            'partida' => $item['partida'],
                            'idProveedor_' . $item['idProveedor'] => floatval($item['importeIM']),
                        );
                        $output[] = $tmp;
                    }
                }

                foreach(array_keys($output) as $key) {
                    unset($output[$key]['partida']);
                }
                $output2 = array_values($output);

                $cotizaciones = 0;

                $data['cotizaciones'] = $cotizaciones;
                $data['output2'] = $output;

                $data['_view'] = 'im_general/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The im_general you are trying to edit does not exist.');
    }

    /*
     * Deleting im_general
     */
    function remove($id)
    {
        $im_general = $this->Imgeneralmodel->get_im_general($id);

        // check if the im_general exists before trying to delete it
        if (isset($im_general['id'])) {
            $this->Imgeneralmodel->delete_im_general($id);
            redirect('im_general/index');
        } else
            show_error('The im_general you are trying to delete does not exist.');
    }

    function obtenerListaIMCFamilia(){
        $clave = $_POST['clave'];
        $data['listaimcfamilia'] = $this->Imgeneralmodel->get_all_lista_imc_familia($clave);
        echo json_encode($data);
    }

    function PeticionesOferta($id)
    {
        $data['peticionesoferta'] = $this->Imgeneralmodel->peticionesoferta($id);
        echo json_encode($data);

    }

    public function GuardarDatos()
    {
        $this->Imgeneralmodel->GuardarDatosModel();

    }

}
