<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Po_consideracion extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Poconsideracionmodel');
    } 

    /*
     * Listing of listapo_consideracion
     */
    function index()
    {
        $data['listapo_consideracion'] = $this->Poconsideracionmodel->get_all_listapo_consideracion();

        $data['_view'] = 'po_consideracion/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new po_consideracion
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('fc1','Fc1','max_length[500]|required');
		$this->form_validation->set_rules('fc2','Fc2','max_length[500]|required');
		$this->form_validation->set_rules('fc3','Fc3','max_length[500]|required');
		$this->form_validation->set_rules('fc4','Fc4','max_length[500]|required');
		$this->form_validation->set_rules('fc5','Fc5','max_length[500]|required');
		$this->form_validation->set_rules('fc6','Fc6','max_length[500]|required');
		$this->form_validation->set_rules('fc7','Fc7','max_length[500]|required');
		$this->form_validation->set_rules('fc8','Fc8','max_length[500]|required');
		$this->form_validation->set_rules('fc9','Fc9','max_length[500]|required');
		$this->form_validation->set_rules('fc10','Fc10','max_length[500]|required');
		$this->form_validation->set_rules('fc11','Fc11','max_length[500]|required');
		$this->form_validation->set_rules('fc12','Fc12','max_length[500]|required');
		$this->form_validation->set_rules('fc13','Fc13','max_length[500]|required');
		$this->form_validation->set_rules('fc14','Fc14','max_length[500]|required');
		$this->form_validation->set_rules('fc15','Fc15','max_length[500]|required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'idpog' => $this->input->post('idpog'),
                'fc1' => strip_tags(trim($this->input->post('fc1')), '<u><b>'),
                'fc2' => strip_tags(trim($this->input->post('fc2')), '<u><b>'),
                'fc3' => strip_tags(trim($this->input->post('fc3')), '<u><b>'),
                'fc4' => strip_tags(trim($this->input->post('fc4')), '<u><b>'),
                'fc5' => strip_tags(trim($this->input->post('fc5')), '<u><b>'),
                'fc6' => strip_tags(trim($this->input->post('fc6')), '<u><b>'),
                'fc7' => strip_tags(trim($this->input->post('fc7')), '<u><b>'),
                'fc8' => strip_tags(trim($this->input->post('fc8')), '<u><b>'),
                'fc9' => strip_tags(trim($this->input->post('fc9')), '<u><b>'),
                'fc10' => strip_tags(trim($this->input->post('fc10')), '<u><b>'),
                'fc11' => strip_tags(trim($this->input->post('fc11')), '<u><b>'),
                'fc12' => strip_tags(trim($this->input->post('fc12')), '<u><b>'),
                'fc13' => strip_tags(trim($this->input->post('fc13')), '<u><b>'),
                'fc14' => strip_tags(trim($this->input->post('fc14')), '<u><b>'),
                'fc15' => strip_tags(trim($this->input->post('fc15')), '<u><b>'),
            );
            
            $po_consideracion_id = $this->Poconsideracionmodel->add_po_consideracion($params);
            redirect('po_general/index');
        }
        else
        {
			$this->load->model('Pogeneralmodel');
			$data['all_listapo_general'] = $this->Pogeneralmodel->get_all_listapo_general_desc();
			$data['poc_inicial'] = $this->Pogeneralmodel->get_poc_inicial();

            $data['_view'] = 'po_consideracion/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a po_consideracion
     */
    function edit($id)
    {   
        // check if the po_consideracion exists before trying to edit it
        $data['po_consideracion'] = $this->Poconsideracionmodel->get_po_consideracion($id);
        
        if(isset($data['po_consideracion']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('fc1','Fc1','max_length[500]|required');
			$this->form_validation->set_rules('fc2','Fc2','max_length[500]|required');
			$this->form_validation->set_rules('fc3','Fc3','max_length[500]|required');
			$this->form_validation->set_rules('fc4','Fc4','max_length[500]|required');
			$this->form_validation->set_rules('fc5','Fc5','max_length[500]|required');
			$this->form_validation->set_rules('fc6','Fc6','max_length[500]|required');
			$this->form_validation->set_rules('fc7','Fc7','max_length[500]|required');
			$this->form_validation->set_rules('fc8','Fc8','max_length[500]|required');
			$this->form_validation->set_rules('fc9','Fc9','max_length[500]|required');
			$this->form_validation->set_rules('fc10','Fc10','max_length[500]|required');
			$this->form_validation->set_rules('fc11','Fc11','max_length[500]|required');
			$this->form_validation->set_rules('fc12','Fc12','max_length[500]|required');
			$this->form_validation->set_rules('fc13','Fc13','max_length[500]|required');
			$this->form_validation->set_rules('fc14','Fc14','max_length[500]|required');
			$this->form_validation->set_rules('fc15','Fc15','max_length[500]|required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'idpog' => $this->input->post('idpog'),
					'fc1' => strip_tags(trim($this->input->post('fc1')), '<u><b>'),
					'fc2' => strip_tags(trim($this->input->post('fc2')), '<u><b>'),
					'fc3' => strip_tags(trim($this->input->post('fc3')), '<u><b>'),
					'fc4' => strip_tags(trim($this->input->post('fc4')), '<u><b>'),
					'fc5' => strip_tags(trim($this->input->post('fc5')), '<u><b>'),
					'fc6' => strip_tags(trim($this->input->post('fc6')), '<u><b>'),
					'fc7' => strip_tags(trim($this->input->post('fc7')), '<u><b>'),
					'fc8' => strip_tags(trim($this->input->post('fc8')), '<u><b>'),
					'fc9' => strip_tags(trim($this->input->post('fc9')), '<u><b>'),
					'fc10' => strip_tags(trim($this->input->post('fc10')), '<u><b>'),
					'fc11' => strip_tags(trim($this->input->post('fc11')), '<u><b>'),
					'fc12' => strip_tags(trim($this->input->post('fc12')), '<u><b>'),
					'fc13' => strip_tags(trim($this->input->post('fc13')), '<u><b>'),
					'fc14' => strip_tags(trim($this->input->post('fc14')), '<u><b>'),
					'fc15' => strip_tags(trim($this->input->post('fc15')), '<u><b>'),
                );

                $this->Poconsideracionmodel->update_po_consideracion($id,$params);            
                redirect('po_general/index');
            }
            else
            {
				$this->load->model('Pogeneralmodel');
				$data['all_listapo_general'] = $this->Pogeneralmodel->get_all_listapo_general();
                $data['poc_edit'] = $this->Pogeneralmodel->get_poc_edit($id);

                $data['_view'] = 'po_consideracion/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The po_consideracion you are trying to edit does not exist.');
    } 

    /*
     * Deleting po_consideracion
     */
    function remove($id)
    {
        $po_consideracion = $this->Poconsideracionmodel->get_po_consideracion($id);

        // check if the po_consideracion exists before trying to delete it
        if(isset($po_consideracion['id']))
        {
            $this->Poconsideracionmodel->delete_po_consideracion($id);
            redirect('po_consideracion/index');
        }
        else
            show_error('The po_consideracion you are trying to delete does not exist.');
    }
    
}
