<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Empleado extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Empleadomodel');
    } 

    /*
     * Listing of listaempleado
     */
    function index()
    {
        $data['listaempleado'] = $this->Empleadomodel->get_all_listaempleado();

        $data['_view'] = 'empleado/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new empleado
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('rpe','Rpe','exact_length[5]|required');
		$this->form_validation->set_rules('nombre','Nombre','max_length[100]|required');
		$this->form_validation->set_rules('apellidoPaterno','ApellidoPaterno','max_length[100]|required');
		$this->form_validation->set_rules('apellidoMaterno','ApellidoMaterno','max_length[100]|required');
		$this->form_validation->set_rules('titulo','Titulo','max_length[3]|required');
		$this->form_validation->set_rules('idDepartamento','IdDepartamento','required');
		$this->form_validation->set_rules('idCategoria','IdCategoria','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'rpe' => $this->input->post('rpe'),
				'nombre' => $this->input->post('nombre'),
				'apellidoPaterno' => $this->input->post('apellidoPaterno'),
				'apellidoMaterno' => $this->input->post('apellidoMaterno'),
				'titulo' => $this->input->post('titulo'),
				'idDepartamento' => $this->input->post('idDepartamento'),
				'idCategoria' => $this->input->post('idCategoria'),
            );
            
            $empleado_id = $this->Empleadomodel->add_empleado($params);
            redirect('empleado/index');
        }
        else
        {
			$this->load->model('Departamentomodel');
			$data['all_listadepartamento'] = $this->Departamentomodel->get_all_listadepartamento();

			$this->load->model('Categoriamodel');
			$data['all_listacategoria'] = $this->Categoriamodel->get_all_listacategoria();
            
            $data['_view'] = 'empleado/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a empleado
     */
    function edit($id)
    {   
        // check if the empleado exists before trying to edit it
        $data['empleado'] = $this->Empleadomodel->get_empleado($id);
        
        if(isset($data['empleado']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('rpe','Rpe','exact_length[5]|required');
			$this->form_validation->set_rules('nombre','Nombre','max_length[100]|required');
			$this->form_validation->set_rules('apellidoPaterno','ApellidoPaterno','max_length[100]|required');
			$this->form_validation->set_rules('apellidoMaterno','ApellidoMaterno','max_length[100]|required');
			$this->form_validation->set_rules('titulo','Titulo','max_length[3]|required');
			$this->form_validation->set_rules('idDepartamento','IdDepartamento','required');
			$this->form_validation->set_rules('idCategoria','IdCategoria','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'rpe' => $this->input->post('rpe'),
					'nombre' => $this->input->post('nombre'),
					'apellidoPaterno' => $this->input->post('apellidoPaterno'),
					'apellidoMaterno' => $this->input->post('apellidoMaterno'),
					'titulo' => $this->input->post('titulo'),
					'idDepartamento' => $this->input->post('idDepartamento'),
					'idCategoria' => $this->input->post('idCategoria'),
                );

                $this->Empleadomodel->update_empleado($id,$params);            
                redirect('empleado/index');
            }
            else
            {
				$this->load->model('Departamentomodel');
				$data['all_listadepartamento'] = $this->Departamentomodel->get_all_listadepartamento();

				$this->load->model('Categoriamodel');
				$data['all_listacategoria'] = $this->Categoriamodel->get_all_listacategoria();

                $data['_view'] = 'empleado/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The empleado you are trying to edit does not exist.');
    } 

    /*
     * Deleting empleado
     */
    function remove($id)
    {
        $empleado = $this->Empleadomodel->get_empleado($id);

        // check if the empleado exists before trying to delete it
        if(isset($empleado['id']))
        {
            $this->Empleadomodel->delete_empleado($id);
            redirect('empleado/index');
        }
        else
            show_error('The empleado you are trying to delete does not exist.');
    }
    
}
