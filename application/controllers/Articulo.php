<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Articulo extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Articulomodel');
    } 

    /*
     * Listing of listaarticulo
     */
    function index()
    {
        $data['listaarticulo'] = $this->Articulomodel->get_all_listaarticulo();

        $data['_view'] = 'articulo/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new articulo
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('codigo','Codigo','max_length[10]|required');
		$this->form_validation->set_rules('descripcion','Descripcion','max_length[150]|required');
		$this->form_validation->set_rules('idUnidadMedida','IdUnidadMedida','required');
		$this->form_validation->set_rules('descripcionDetallada','DescripcionDetallada','max_length[250]|required');
		$this->form_validation->set_rules('especificacion','Especificacion','max_length[50]|required');
		$this->form_validation->set_rules('idFamilia','IdFamilia','required');
		$this->form_validation->set_rules('precioUnitario','PrecioUnitario','required|decimal');
		$this->form_validation->set_rules('status','Status','required');
		$this->form_validation->set_rules('idUMEmbalaje','IdUMEmbalaje','required');
		$this->form_validation->set_rules('cantidadEmbalaje','CantidadEmbalaje','required|integer');
		$this->form_validation->set_rules('tiempoEntrega','TiempoEntrega','integer|required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'codigo' => $this->input->post('codigo'),
				'descripcion' => $this->input->post('descripcion'),
				'idUnidadMedida' => $this->input->post('idUnidadMedida'),
				'descripcionDetallada' => $this->input->post('descripcionDetallada'),
				'especificacion' => $this->input->post('especificacion'),
				'idFamilia' => $this->input->post('idFamilia'),
				'precioUnitario' => $this->input->post('precioUnitario'),
				'status' => $this->input->post('status'),
				'idUMEmbalaje' => $this->input->post('idUMEmbalaje'),
				'cantidadEmbalaje' => $this->input->post('cantidadEmbalaje'),
				'tiempoEntrega' => $this->input->post('tiempoEntrega'),
            );
            
            $articulo_id = $this->Articulomodel->add_articulo($params);
            redirect('articulo/index');
        }
        else
        {
			$this->load->model('Unidadmedidamodel');
			$data['all_listaunidadmedida'] = $this->Unidadmedidamodel->get_all_listaunidadmedida();

			$this->load->model('Familiamodel');
			$data['all_listafamilia'] = $this->Familiamodel->get_all_listafamilia();
			$data['all_listaunidadmedida'] = $this->Unidadmedidamodel->get_all_listaunidadmedida();
            
            $data['_view'] = 'articulo/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a articulo
     */
    function edit($id)
    {   
        // check if the articulo exists before trying to edit it
        $data['articulo'] = $this->Articulomodel->get_articulo($id);
        
        if(isset($data['articulo']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('codigo','Codigo','max_length[10]|required');
			$this->form_validation->set_rules('descripcion','Descripcion','max_length[150]|required');
			$this->form_validation->set_rules('idUnidadMedida','IdUnidadMedida','required');
			$this->form_validation->set_rules('descripcionDetallada','DescripcionDetallada','max_length[250]|required');
			$this->form_validation->set_rules('especificacion','Especificacion','max_length[50]|required');
			$this->form_validation->set_rules('idFamilia','IdFamilia','required');
			$this->form_validation->set_rules('precioUnitario','PrecioUnitario','required|decimal');
			$this->form_validation->set_rules('status','Status','required');
			$this->form_validation->set_rules('idUMEmbalaje','IdUMEmbalaje','required');
			$this->form_validation->set_rules('cantidadEmbalaje','CantidadEmbalaje','required|integer');
			$this->form_validation->set_rules('tiempoEntrega','TiempoEntrega','integer|required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'codigo' => $this->input->post('codigo'),
					'descripcion' => $this->input->post('descripcion'),
					'idUnidadMedida' => $this->input->post('idUnidadMedida'),
					'descripcionDetallada' => $this->input->post('descripcionDetallada'),
					'especificacion' => $this->input->post('especificacion'),
					'idFamilia' => $this->input->post('idFamilia'),
					'precioUnitario' => $this->input->post('precioUnitario'),
					'status' => $this->input->post('status'),
					'idUMEmbalaje' => $this->input->post('idUMEmbalaje'),
					'cantidadEmbalaje' => $this->input->post('cantidadEmbalaje'),
					'tiempoEntrega' => $this->input->post('tiempoEntrega'),
                );

                $this->Articulomodel->update_articulo($id,$params);            
                redirect('articulo/index');
            }
            else
            {
				$this->load->model('Unidadmedidamodel');
				$data['all_listaunidadmedida'] = $this->Unidadmedidamodel->get_all_listaunidadmedida();

				$this->load->model('Familiamodel');
				$data['all_listafamilia'] = $this->Familiamodel->get_all_listafamilia();
				$data['all_listaunidadmedida'] = $this->Unidadmedidamodel->get_all_listaunidadmedida();

                $data['_view'] = 'articulo/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The articulo you are trying to edit does not exist.');
    } 

    /*
     * Deleting articulo
     */
    function remove($id)
    {
        $articulo = $this->Articulomodel->get_articulo($id);

        // check if the articulo exists before trying to delete it
        if(isset($articulo['id']))
        {
            $this->Articulomodel->delete_articulo($id);
            redirect('articulo/index');
        }
        else
            show_error('The articulo you are trying to delete does not exist.');
    }
    
}
