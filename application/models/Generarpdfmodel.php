<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Generarpdfmodel extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
    * SELECCIONA LA RAZÓN SOCIAL, EL NOMBRE DEL CONTACTO Y EL CORREO ELECTRÓNICO 
    * DEL DESTINATARIO DE LA PETICIÓN OFERTA GENERAL
    */

    function get_po_tipo($id){
        $this->db->select('tipo');
        $this->db->from('po_general');
        $this->db->where('id', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->row('tipo');
        } else {
            return 0;
        }
    }
    
    function get_contactos($id)
    {
        $this->db->select('proveedor.razonSocial, proveedor.direccion, municipio.nombre municipio, estado.nombre estado, proveedor.codigoPostal
            , CASE po_proveedor.contacto
                WHEN 1 THEN proveedor.nombre1
                WHEN 2 THEN proveedor.nombre2
                WHEN 3 THEN proveedor.nombre3
            END nombre
            , CASE po_proveedor.contacto
                WHEN 1 THEN proveedor.telefonoFijo1
                WHEN 2 THEN proveedor.telefonoFijo2
                WHEN 3 THEN proveedor.telefonoFijo3
            END telefonoFijo
            , CASE po_proveedor.contacto
                WHEN 1 THEN proveedor.telefonoMovil1
                WHEN 2 THEN proveedor.telefonoMovil2
                WHEN 3 THEN proveedor.telefonoMovil3
            END telefonoMovil
            , CASE po_proveedor.contacto
                WHEN 1 THEN proveedor.correoElectronico1
                WHEN 2 THEN proveedor.correoElectronico2
                WHEN 3 THEN proveedor.correoElectronico3
            END correoElectronico', FALSE);
        $this->db->from('proveedor');
        $this->db->join('po_proveedor', 'proveedor.id = po_proveedor.idProveedor', 'inner');
        $this->db->join('municipio', 'proveedor.idMunicipio = municipio.id', 'inner');
        $this->db->join('estado', 'municipio.idEstado = estado.id', 'inner');
        $this->db->where('po_proveedor.idPog', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }
    

    /*
    * SELECCIONAR LOS NUMEROS DE OFICIO
    */
    function get_pog_numero_oficio($id)
    {
        $this->db->select('po_numoficio.numOficio, po_numoficio.anio');
        $this->db->from('po_numoficio');
        $this->db->where('po_numoficio.idPog', $id);
        $this->db->order_by('po_numoficio.numOficio', 'ASC');
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    /*
    * SELECCIONA LA INFORMACIÓN BÁSICA DEL DOCUMENTO POG. ESTÁ INFORMACIÓN ES IGUAL PARA 
    * TODAS LAS COPIAS.
    */

    function get_pog_data($id)
    {
        $this->db->select('familia.clave, familia.descripcion, po_general.actividad, estado.nombre estado, municipio.nombre municipio, po_general.fechaElaboracion, po_general.domicilio, po_general.fechaLimitePresentacion, po_general.horaLimitePresentacion, po_general.asunto, po_general.ccp1, po_general.ccp2, po_general.ccp3');
        $this->db->from('po_general');
        $this->db->join('municipio', 'po_general.idMunicipio = municipio.id', 'inner');
        $this->db->join('estado', 'municipio.idEstado = estado.id', 'inner');
        $this->db->join('familia', 'po_general.idFamilia = familia.id', 'inner');
        $this->db->where('po_general.id', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    

    /*
    * SELECCIONA LA INFORMACIÓN DEL EMPLEADO RESPONSPABLE DEL POG
    */

    function get_pog_responsable($id)
    {
        $this->db->select('empleado.nombre nombre, empleado.apellidoPaterno, empleado.apellidoMaterno, empleado.titulo, categoria.nombre categoria, departamento.nombre departamento, empleado.correoElectronico');
        $this->db->from('po_general');
        $this->db->join('empleado', 'po_general.idEmpleadoResponsable = empleado.id', 'inner');
        $this->db->join('categoria', 'empleado.idCategoria = categoria.id', 'inner');
        $this->db->join('departamento', 'empleado.idDepartamento = departamento.id', 'inner');
        $this->db->where('po_general.id', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    

    /*
    * SELECCIONA LA INFORMACIÓN DEL EMPLEADO QUE FORMULA EL POG
    */
    function get_pog_formula($id)
    {
        $this->db->select('empleado.nombre nombre, empleado.apellidoPaterno, empleado.apellidoMaterno, empleado.titulo, empleado.correoElectronico');
        $this->db->from('po_general');
        $this->db->join('empleado', 'po_general.idEmpleadoFormula = empleado.id', 'inner');
        $this->db->join('categoria', 'empleado.idCategoria = categoria.id', 'inner');
        $this->db->join('departamento', 'empleado.idDepartamento = departamento.id', 'inner');
        $this->db->where('po_general.id', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    /*
    * SELECCIONA LA INFORMACIÓN DEL DOCUMENTO PO_CONSIDERACION
    */
    function get_po_consideracion($id)
    {
        $this->db->select('po_consideracion.fc1, po_consideracion.fc2, po_consideracion.fc3, po_consideracion.fc4, po_consideracion.fc5, po_consideracion.fc6, po_consideracion.fc7, po_consideracion.fc8, 
                    po_consideracion.fc9, po_consideracion.fc10, po_consideracion.fc11, po_consideracion.fc12, po_consideracion.fc13, po_consideracion.fc14, po_consideracion.fc15');
        $this->db->from('po_general');
        $this->db->join('po_consideracion', 'po_general.id = po_consideracion.idpog', 'inner');
        $this->db->where('po_general.id', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    /*
    * SELECCIONA LOS DATOS QUE VAN EN LA TABLA IM
    */
    function get_im_concepto($id)
    {
        $this->db->distinct();
        $this->db->select('im_concepto.partida, articulo.codigo, articulo.descripcion, articulo.descripcionDetallada, articulo.especificacion, 
                    im_concepto.plazoEntrega, im_concepto.cantidad, unidadmedida.clave, im_concepto.lugarEntrega, im_concepto.direccionEntrega');
        $this->db->from('im_concepto');
        $this->db->join('articulo', 'im_concepto.idArticulo = articulo.id', 'inner');
        $this->db->join('unidadmedida', 'articulo.idUnidadMedida = unidadmedida.id', 'inner');
        $this->db->where('im_concepto.idPog', $id);
        $this->db->order_by('im_concepto.partida', 'ASC');
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    function get_im_general($id)
    {
        $this->db->select('im_general.titulo, municipio.nombre municipio, estado.nombre estado, im_general.fechaElaboracion');
        $this->db->from('im_general');
        $this->db->join('municipio', 'im_general.idMunicipioElaboracion = municipio.id', 'inner');
        $this->db->join('estado', 'municipio.idEstado = estado.id', 'inner');
        $this->db->where('im_general.idPog', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }

    }

    function get_imc_header($id){
        $this->db->distinct();
        $this->db->select('im_general.SOLPED, familia.descripcion');
        $this->db->from('im_general');
        $this->db->join('im_concepto', 'im_general.id = im_concepto.idImg', 'inner');
        $this->db->join('articulo', 'im_concepto.idArticulo = articulo.id', 'inner');
        $this->db->join('familia', 'articulo.idFamilia = familia.id', 'inner');
        $this->db->where('im_general.id', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    function get_imc_fecha_imp($id){
        $this->db->select('fechaImpresion');
        $this->db->from('im_general');
        $this->db->where('im_general.id', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->row('fechaImpresion');
        } else {
            return 0;
        }
    }

    function update_img_fechaimp($id, $fechaImpresion){
        $this->db->where('id', $id);
        $this->db->update('im_general', array('fechaImpresion' => $fechaImpresion));
    }

    function get_im_empleado_elabora($id)
    {
        $this->db->select('empleado.titulo, empleado.nombre, empleado.apellidoPaterno, empleado.apellidoMaterno');
        $this->db->from('im_general');
        $this->db->join('empleado', 'im_general.idEmpleadoFormula = empleado.id', 'inner');
        $this->db->where('im_general.idPog', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    function get_im_empleado_autoriza($id)
    {
        $this->db->select('empleado.titulo, empleado.nombre, empleado.apellidoPaterno, empleado.apellidoMaterno');
        $this->db->from('im_general');
        $this->db->join('empleado', 'im_general.idEmpleadoAutoriza = empleado.id', 'inner');
        $this->db->where('im_general.idPog', $id);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    /* OBTENER LA RAZÓN SOCIAL DE LOS PROVEEDORES (PARA EL THEAD DE LA TABLA) */
    function get_razonsocial($id){
        $this->db->distinct();
        $this->db->select('proveedor.id, proveedor.razonSocial');
        $this->db->from('im_concepto');
        $this->db->join('proveedor', 'im_concepto.idProveedor = proveedor.id', 'inner');
        $this->db->where('im_concepto.idImg', $id);
        $this->db->where('im_concepto.cotizado', 'S');
        $this->db->order_by('proveedor.id', 'ASC');
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    /* CONSULTA PARA LOS DATOS BÁSICOS DE LA TABLA IMC */
    function get_imcdata($id){
        $this->db->distinct();
        $this->db->select('im_concepto.partida, articulo.codigo, articulo.descripcion, im_concepto.cantidad, unidadmedida.clave, familia.descripcion as familia, im_concepto.pmc');
        $this->db->from('im_concepto');
        $this->db->join('articulo', 'im_concepto.idArticulo = articulo.id', 'inner');
        $this->db->join('unidadmedida', 'articulo.idUnidadMedida = unidadmedida.id', 'inner');
        $this->db->join('familia', 'articulo.idFamilia = familia.id', 'inner');
        $this->db->where('im_concepto.idImg', $id);
        $this->db->order_by('im_concepto.partida', 'ASC');
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    /*
    function get_cotizaciones($id){
        $this->db->select('im_concepto.preciounitarioIM');
        $this->db->from('im_concepto');
        $this->db->where('im_concepto.idImg', $id);
        $this->db->where('im_concepto.cotizado', 'S');
        $this->db->order_by('im_concepto.idProveedor', 'ASC');
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }
    */

    function get_cotizacion($idImg, $idProveedor){
        $this->db->select('im_concepto.preciounitarioIM');
        $this->db->from('im_concepto');
        $this->db->where('im_concepto.idImg', $idImg);
        $this->db->where('im_concepto.idProveedor', $idProveedor);
        $this->db->order_by('im_concepto.partida', 'ASC');
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }


    //PARA EL REPORTE RESUMEN ICM
    function get_resumenicm2(){
        $this->db->select('p.razonSocial, a.descripcion, imc.cantidad, imc.partida, a.tiempoEntrega, "ALMACEN DIVISIONAL", imc.moneda, pog.vigenciacotizacion, a.especificacion, imc.preciounitarioIM, imc.preciounitarioIM * imc.cantidad AS total');
        $this->db->from('im_concepto imc, articulo a, proveedor p, po_general pog ');
        $this->db->where('idImg', 14);
        $this->db->where('preciounitarioIM >', 0);
        $this->db->where('a.id', 'imc.idArticulo');
        $this->db->where('p.id', 'imc.idProveedor');
        $this->db->where('pog.id', 'imc.idPog');
        $this->db->order_by('imc.idProveedor', 'ASC');
        $this->db->order_by('imc.partida', 'ASC');
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    function get_resumenicm($id){
        $this->db->select('proveedor.razonSocial, articulo.descripcion, im_concepto.cantidad, im_concepto.partida, articulo.tiempoEntrega, im_concepto.lugarEntrega, im_concepto.moneda, po_general.vigenciacotizacion, articulo.especificacion, im_concepto.preciounitarioIM, im_concepto.preciounitarioIM, im_concepto.cantidad');
        $this->db->from('im_concepto');
        $this->db->join('proveedor', 'im_concepto.idProveedor = proveedor.id', 'inner');
        $this->db->join('articulo', 'im_concepto.idArticulo = articulo.id', 'inner');
        $this->db->join('po_general', 'im_concepto.idPog = po_general.id', 'inner');
        $this->db->where('idImg', $id);
        $this->db->where('preciounitarioIM >', 0);
        $this->db->order_by('im_concepto.idProveedor', 'ASC');
        $this->db->order_by('im_concepto.partida', 'ASC');
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }

    //REPORTE CHECKLIST
    public function get_checklist_descripcion($idImg){
        $this->db->distinct();
        $this->db->select('im_concepto.plazoEntrega, im_concepto.lugarEntrega, familia.descripcion');
        $this->db->from('im_concepto');
        $this->db->join('articulo', 'articulo.id = im_concepto.idArticulo', 'inner');
        $this->db->join('familia', 'familia.id = articulo.idFamilia', 'inner');
        $this->db->where('im_concepto.idImg', $idImg);
        $this->db->where('im_concepto.idProveedor !=', '6666');
        $this->db->where('im_concepto.idProveedor !=', '7777');
        $this->db->where('im_concepto.idProveedor !=', '8888');
        $this->db->where('im_concepto.idProveedor !=', '9999');
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }
    }


    public function get_checklist_data($idImg){
        $this->db->select('im_general.SOLPED, checklist.concurso, checklist.fabricacionnacional, checklist.proveedoraprovado,
                            checklist.prototipoaprovado, checklist.avisopruebas, checklist.bajodemanda, checklist.porcentajedemanda,
                            checklist.preciosfijos, checklist.anticipo, checklist.garantiacumplimiento, checklist.porcentajegarantiacumplimiento,
                            checklist.garantiacalidad, checklist.porcentajegarantiacalidad, checklist.sesionaclaraciones, checklist.requieremuestra,
                            checklist.cuesttecnico, checklist.marcaespecifica, checklist.criterioevaluacion, checklist.tipotransporte');
        $this->db->from('checklist');
        $this->db->join('im_general', 'im_general.id = checklist.idImg', 'inner');
        $this->db->where('checklist.idImg', $idImg);
        $query = $this->db->get();
        if($query->num_rows() > 0){
            return $query->result_array();
        }

    }
}