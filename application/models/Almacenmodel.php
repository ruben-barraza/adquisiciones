<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Almacenmodel extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get almacen by id
     */
    function get_almacen($id)
    {
        return $this->db->get_where('almacen',array('id'=>$id))->row_array();
    }
    
    /*
     * Get all listaalmacen
     */
    function get_all_listaalmacen()
    {
        $this->db->select('almacen.id, almacen.centroMM, empleado.nombre empleadoNombre, empleado.apellidoPaterno empleadoAP, empleado.apellidoMaterno empleadoAM, almacen.nombre almacenNombre, almacen.domicilio, almacen.codigoPostal, estado.nombre estado, municipio.nombre municipio, almacen.telefono');
        $this->db->from('almacen');
        $this->db->join('empleado', 'almacen.idEmpleadoResponsable = empleado.id', 'inner');
        $this->db->join('municipio', 'almacen.idMunicipio = municipio.id', 'inner');
        $this->db->join('estado', 'municipio.idEstado = estado.id', 'inner');
        $query = $this->db->get();
        return $query->result_array();
    }
    
    /*
     * function to add new almacen
     */
	
	function add_almacen($params)
    {
		$params['id'] = $this->get_idConsecutivo();
        $this->db->insert('almacen',$params);
        return $this->db->insert_id();
    }
    
    function get_idConsecutivo()
    {
		$maxid = 1;
        $row = $this->db->query("select max(id) as 'maxid' from almacen")->row();
		if ($row) {
			$maxid = $row->maxid + 1;
		}
		return $maxid;
	}
    
    /*
     * function to update almacen
     */
    function update_almacen($id,$params)
    {
        $this->db->where('id',$id);
        $response = $this->db->update('almacen',$params);
        if($response)
        {
            return "almacen updated successfully";
        }
        else
        {
            return "Error occuring while updating almacen";
        }
    }
    
    /*
     * function to delete almacen
     */
    function delete_almacen($id)
    {
        $response = $this->db->delete('almacen',array('id'=>$id));
        if($response)
        {
            return "almacen deleted successfully";
        }
        else
        {
            return "Error occuring while deleting almacen";
        }
    }

    /*
     * funcion para obtener el ID del municipio que corresponde al proveedor que se quiere editar
     */
    public function obtenerIdMunicipio($idAlmacen){
        $this->db->select('idMunicipio')->from('almacen')->where('id', $idAlmacen);
        $valor = $this->db->get();
        $vl = $valor->row_array();
        return $vl['idMunicipio'];
    }

    /*
     * funciÃ³n para obtener el estado seleccionado de la base de datos
     */
    public function obtenerIdEstado($idMunicipio){
        $this->db->select('idEstado')->from('municipio')->where('id', $idMunicipio);
        $valor = $this->db->get();
        $vl = $valor->row_array();
        return $vl['idEstado'];  
    }
}
